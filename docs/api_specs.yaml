openapi: 3.0.3
info:
  title: Swagger Aristote - OpenAPI 3.0
  version: 0.0.1
  description: All endpoints are protected using an authentication mechanism.
paths:
  /enrichments:
    get:
      summary: Enable a user to list, with pagination, all of his own created enrichment
      parameters:
        - name: sort
          description: Sort property to use
          in: query
          required: false
          schema:
            type: string
            example: createdAt
        - name: order
          description: Sort direction
          in: query
          required: false
          schema:
            type: string
            example: desc
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/EnrichmentDetailResponse'
                  totalElements:
                    type: integer
                    format: int64
                    example: 25
                  currentPage:
                    type: integer
                    format: int64
                    example: 1
                  isLastPage:
                    type: boolean
                    example: false
        
        '400':
          description: Bad parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User is not authenticated
  /enrichments/transcripts/upload:
    post:
      summary: Create an enrichment from a video file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              properties:
                video:
                  type: string
                  format: binary
                  description: File containing transcripts in subtitle format
                enrichmentParams: 
                  $ref: '#/components/schemas/EnrichmentCreationParams'
                notification:
                  type: object
                  properties:
                    webhookUrl:
                      type: string
                  example:
                    webhookUrl: https://example.com/webhook
      security:
        - bearerAuth: []
      responses:
        '200':
          description: File uploaded successfully, enrichment will be started as soon as possible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichmentCreationResponse'
        '400':
          description: Bad request, invalid data provided
        '401':
          description: User is not authenticated
  /enrichments/upload:
    post:
      summary: Create an enrichment from a video file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              properties:
                video:
                  type: string
                  format: binary
                enrichmentParams: 
                  $ref: '#/components/schemas/EnrichmentCreationParams'
                notification:
                  type: object
                  properties:
                    webhookUrl:
                      type: string
                  example:
                    webhookUrl: https://example.com/webhook
      security:
        - bearerAuth: []
      responses:
        '200':
          description: File uploaded successfully, enrichment will be started as soon as possible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichmentCreationResponse'
        '400':
          description: Bad request, invalid data provided
        '401':
          description: User is not authenticated
  /enrichments/url:
    post:
      summary: Create an enrichment from a video URL (accessible without authentication)
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              properties:
                video-url:
                  type: string
                enrichmentParams:
                  $ref: '#/components/schemas/EnrichmentCreationParams'
                notification:
                  type: object
                  properties:
                    webhookUrl:
                      type: string
                  example:
                    webhookUrl: https://example.com/webhook
      security:
        - bearerAuth: []
      responses:
        '200':
          description: File uploaded successfully, enrichment will be started as soon as possible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichmentCreationResponse'
        '400':
          description: Bad request, invalid data provided
        '401':
          description: User is not authenticated
  /enrichments/{enrichmentId}:
    get:
      summary: Get enrihment status by id
      parameters:
        - name: enrichmentId
          in: path
          description: ID of the enrichment to get
          required: true
          schema:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichmentDetailResponse'
        '400':
          description: Bad parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User is not authenticated
        '403':
          description: Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /enrichments/{enrichmentId}/versions:
    get:
      summary: Get pagination result of version for an enrichment
      parameters:
        - name: enrichmentId
          in: path
          description: ID of the enrichment to get
          required: true
          schema:
            type: integer
            format: int64
        - name: sort
          description: Sort property to use
          in: query
          required: false
          schema:
            type: string
            example: createdAt
        - name: order
          description: Sort direction
          in: query
          required: false
          schema:
            type: string
            example: desc
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: withTranscript
          description: Sort property to use
          in: query
          required: false
          schema:
            type: boolean
            example: true
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichmentPaginationResponse'
        '400':
          description: Bad parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User is not authenticated
        '403':
          description: Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create a new version of an enrichment
      parameters:
        - name: enrichmentId
          in: path
          description: ID of the enrichment to get
          required: true
          schema:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VersionUpsertRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDetailResponse'
        '400':
          description: Request content is invalid
        '401':
          description: User is not authenticated
        '403':
          description: User is not allowed to access this resource
  /enrichments/{enrichmentId}/versions/latest:
    get:
      summary: Get the latest version from an enrichment
      parameters:
        - name: enrichmentId
          in: path
          description: ID of the enrichment to get
          required: true
          schema:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDetailResponse'
        '400':
          description: Bad parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User is not authenticated
        '403':
          description: Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /versions/{versionId}:
    get:
      summary: Get the details of an enrichment version
      parameters:
        - name: versionId
          in: path
          description: ID of the version to get
          required: true
          schema:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionDetailResponse'
        '400':
          description: Bad parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: User is not authenticated
        '403':
          description: Not allowed to access this resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Get the details of an enrichment version
      parameters:
        - name: versionId
          in: path
          description: ID of the version to get
          required: true
          schema:
            type: integer
            format: int64
      security:
        - bearerAuth: []
      responses:
        '204':
          description: successful operation
        '401':
          description: User is not authenticated
        '403':
          description: User is not allowed to access this resource
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    EnrichmentCreationResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid4
          description: The enrichment ID
    EnrichmentDetailResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid4
          description: The enrichment ID
        status:
          type: string
          description: Status
          enum:
            - WAITING_MEIDA_UPLOAD
            - UPLOADING
            - PENDING
            - PROCESSING_AI
            - SUCCESS
            - FAILURE
        initialVersionId:
          type: string
          format: uuid4
          description: Initial version extracted from enrichment pipeline if status is SUCCESS, null otherwise
          example: null
        disciplines:
          type: array
          items:
            type: string
        mediaTypes:
          type: array
          items:
            type: string
        failureCause:
          type: string
        notificationStatus:
          type: integer
          format: int64
        notifiedAt:
          type: string
          format: date
    VersionDetailResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid4
        createdAt:
          type: string
          format: date
        updatedAt:
          type: string
          format: date
        enrichmentVersionMetadata:
          $ref: "#/components/schemas/enrichmentVersionMetadata"
        transcript:
          $ref: "#/components/schemas/transcript"
        multipleChoiceQuestions:
          $ref: "#/components/schemas/multipleChoiceQuestions"
    enrichmentVersionMetadata:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        topics:
          type: array
          items:
            type: string
        discipline:
          type: string
        mediaType:
          type: string
    transcript:
      type: object
      properties:
        originalFilename:
          type: string
        language:
          type: string
        sentences:
          type: array
          items:
            type: object
            properties:
              is_transient:
                type: boolean
              no_speech_prob:
                type: number
              start:
                type: number
              end:
                type: number
              text:
                type: string
        text:
          type: string
    multipleChoiceQuestions:
      type: array
      items:
        type: object
        properties:
          question:
            type: string
          explanation:
            type: string
          choices:
            type: object
            properties:
              optionText:
                type: string
              isCorrectAnswer:
                type: boolean
    VersionUpsertRequest:
          type: object
          properties:
            enrichmentVersionMetadata:
              $ref: "#/components/schemas/enrichmentVersionMetadata"
            transcript:
              $ref: "#/components/schemas/transcript"
            multipleChoiceQuestions:
              $ref: "#/components/schemas/multipleChoiceQuestions"
    EnrichmentPaginationResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/VersionDetailResponse'
        totalElements:
          type: integer
          format: int64
          example: 25
        currentPage:
          type: integer
          format: int64
          example: 1
        isLastPage:
          type: boolean
          example: false
    EnrichmentCreationParams:
      type: object
      properties: 
        disciplines: 
          type: array
          items:
            type: string
          description: discipline list in which the media must be indexed
        videoTypes: 
          type: array
          items: 
            type: string
          description: video type list in which the media must be indexed (course, conference, ...)
    ErrorResponse:
      type: object
      properties: 
        status: 
          type: string
          description: KO
        errors: 
          type: array
          items: 
            type: string
          description: Error messages
security:
  - bearerAuth: []